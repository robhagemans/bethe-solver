#ifndef DET_DEF
#define DET_DEF

#include "det.h"


// LU decomposition
//
template <class number>
	void decomposeLU (Square<number>& a, vector<int>& indx, int& d)
{
	const char* here = "ludcmp";
	int n = a.size();

	// you'll need to add an LU-decomposition routine here
	//
	// e.g. void ludcmp(float **a, int n, int *indx, float *d)
	// as defined in Numerical Recipes in C, section 2.3, p.46
	// with minimal changes

	throw Exception(here, exc_NotImplementedNRC);
}

template <class number>
	void backsubLU (Square<number>& a, vector<int>& indx, vector<number>& b)
{
	const char* here = "lubksb";
	int n = a.size();

	// void lubksb(float **a, int n, int *indx, float b[])
	// Numerical Recipes in C, section 2.3, p. 47

	throw Exception(here, exc_NotImplementedNRC);
}

#endif
